"""
Django settings for ecommerce project.
Generated by 'django-admin startproject' using Django 4.2.2.
"""

# ---------- IMPORTS ----------
import os
from pathlib import Path
import mimetypes
from dotenv import load_dotenv

# ---------- PATH SETTINGS ----------
BASE_DIR = Path(__file__).resolve().parent.parent
envf = os.path.join(BASE_DIR, '.env')
load_dotenv()

# ---------- CORE SETTINGS ----------
SECRET_KEY = os.getenv("SECRET_KEY", "some_random_keyklwfnwofnweofmwelf")
SPREADSHEET_API = os.getenv('SPREADSHEET_API')
DEBUG = True
ALLOWED_HOSTS = ['*']
IS_SERVER = bool(int(os.getenv('IS_SERVER', True)))


# ---------- APPLICATION DEFINITION ----------
INSTALLED_APPS = [
    # Admin theme
    'unfold',
    "unfold.contrib.filters",
    "unfold.contrib.forms",
    "unfold.contrib.inlines",

    # Django built-in
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.humanize",

    # Internal apps
    'ecommerce.abstract',
    'ecommerce.account',
    'ecommerce.order',
    'ecommerce.product',
    'ecommerce.htmx_messages',
    'ecommerce.home',

    # Third-party apps
    'taggit',
    'sorl.thumbnail',
    'simple_menu',
    'django_sass',
    "django_htmx",
    'compressor',
    'djmoney',
    'django_filters',
    'crispy_forms',
    "crispy_bootstrap4",
    'storages',
    'dbbackup',
    'django_extensions',
    'pwa',
    "django_browser_reload",
]
if not IS_SERVER:
    INSTALLED_APPS.append('silk')
# ---------- MIDDLEWARE SETTINGS ----------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'ecommerce.abstract.middleware.AdminEnglishMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'ecommerce.htmx_messages.middleware.HtmxMessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_browser_reload.middleware.BrowserReloadMiddleware",
    "django_htmx.middleware.HtmxMiddleware",
    'django_ratelimit.middleware.RatelimitMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
]
if not IS_SERVER:
    MIDDLEWARE.append('silk.middleware.SilkyMiddleware')

# ---------- CACHE SETTINGS ----------
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
#         'LOCATION': '/var/tmp/django_cache',
#     }
# }
CACHE_TIMEOUT = 3600

class CacheKeys:
    BEST_SELLERS_CACHE_KEY = "best_sellers_volumes"
    NEW_RELEASES_CACHE_KEY = "new_releases"
    AUTHOR_CACHE_KEY = "authors"

# ---------- TEMPLATE SETTINGS ----------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ---------- DATABASE SETTINGS ----------
USE_RDS = bool(int(os.getenv('USE_RDS', False)))
if USE_RDS:
    DB_NAME = os.getenv('RDB_NAME')
    DB_USER = os.getenv('RDB_USER')
    DB_PASS = os.getenv('RDB_PASS')
    DB_HOST = os.getenv('RDB_HOST')
    DB_PORT = os.getenv('RDB_PORT')
else:
    DB_NAME = os.getenv('DB_NAME')
    DB_USER = os.getenv('DB_USER')
    DB_PASS = os.getenv('DB_PASS')
    DB_HOST = os.getenv('DB_HOST')
    DB_PORT = os.getenv('DB_PORT')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASS,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
        'CONN_MAX_AGE': 60,
    }
}

# ---------- AUTHENTICATION SETTINGS ----------
AUTH_USER_MODEL = 'account.User'
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ---------- INTERNATIONALIZATION ----------
LANGUAGE_CODE = 'ar'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True
LANGUAGES = [('ar', ('Arabic'))]
LOCALE_PATHS = (BASE_DIR / 'locale',)

# ---------- STATIC AND MEDIA FILES ----------
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

os.mkdir(os.path.join(BASE_DIR, 'static')) if not os.path.exists(os.path.join(BASE_DIR, 'static')) else None
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# ---------- AWS S3 SETTINGS ----------
USE_S3 = bool(int(os.getenv('USE_S3', False)))
if USE_S3:
    CORS_ALLOW_ALL_ORIGINS = True
    AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
    AWS_REGION = os.getenv("AWS_REGION")
    AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
    AWS_DEFAULT_ACL = 'public-read'
    AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=31536000, immutable',}
    AWS_LOCATION = 'static'

    STATICFILES_STORAGE = 'ecommerce.storage_backends.StaticStorage'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'ecommerce.storage_backends.PublicMediaStorage'
    AWS_IS_GZIPPED = True
    STORAGES = {
        "default": {"BACKEND": "ecommerce.storage_backends.PublicMediaStorage"},
        "staticfiles": {"BACKEND": "ecommerce.storage_backends.StaticStorage"},
    }
else:
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    STORAGES = {
        "default": {"BACKEND": "django.core.files.storage.FileSystemStorage"},
    }

# ---------- THIRD PARTY APPS SETTINGS ----------
# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

# Compress
COMPRESS_ROOT = BASE_DIR / 'static'
COMPRESS_ENABLED = False
COMPRESS_OFFLINE = True
COMPRESS_CSS_FILTERS = [
    'compressor.filters.css_default.CssAbsoluteFilter',
    'compressor.filters.cssmin.CSSMinFilter',
]

# Static Files Finders
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
)

# Rate Limiting
RATELIMIT_VIEW = 'ecommerce.abstract.views.beenLimited'
LIGHT_REQUESTS_RATE_LIMIT = '250/m'
MEDIUM_REQUESTS_RATE_LIMIT = '100/m'
HEAVY_REQUESTS_RATE_LIMIT = '50/m'

# Database Backup
DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
DBBACKUP_STORAGE_OPTIONS = {'location': 'db_backup/'}
DBBACKUP_POSTGRESQL_OPTIONS = '--no-owner'
DBBACKUP_POSTGRESQL_PGDUMP_OPTIONS = '--no-owner'

# PWA Settings
PWA_APP_NAME = 'Manga Store'
PWA_APP_DESCRIPTION = "Manga Store"
PWA_APP_THEME_COLOR = '#FE5353'
PWA_APP_BACKGROUND_COLOR = '#333333'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = '/'
PWA_APP_STATUS_BAR_COLOR = 'default'
PWA_APP_ICONS = [{'src': '/static/images/favicon/icon-192x192.png', 'sizes': '192x192'}]
PWA_APP_ICONS_APPLE = [{'src': '/static/images/favicon/icon-192x192.png', 'sizes': '192x192'}]
PWA_APP_LANG = 'en-US'

# ---------- MISCELLANEOUS ----------
ROOT_URLCONF = 'ecommerce.urls'
WSGI_APPLICATION = 'ecommerce.wsgi.application'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CURRENCIES = ('USD', 'IQD')
mimetypes.add_type("text/css", ".css", True)
INTERNAL_IPS = ["127.0.0.1"]
ADMIN_URL = 'los-pollos-hermanous-admin/'
SILKY_IGNORE_PATHS = [f'/{ADMIN_URL}/jsi18n/']
# ---------- PRODUCTION SETTINGS ----------
if IS_SERVER:
    DEBUG = False
    RATELIMIT_IP_META_KEY = 'HTTP_X_FORWARDED_FOR'
    SECURE_HSTS_SECONDS = 31536000
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    # SECURE_SSL_REDIRECT = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    ALLOWED_HOSTS = ['mangastore1.com', 'www.mangastore1.com']
    LIGHT_REQUESTS_RATE_LIMIT = '50/m'
    MEDIUM_REQUESTS_RATE_LIMIT = '25/m'
    HEAVY_REQUESTS_RATE_LIMIT = '10/m'
